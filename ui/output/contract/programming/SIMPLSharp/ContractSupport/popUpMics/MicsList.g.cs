//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by CrestronConstruct.
//     AppHost:     2.101.8.0
//     UI Plugin:   1.3701.9.0
//
//     Project:     MicrosoftTeamsDemo
//     Version:     1.0.0.0
//     Sdk:         CH5:2.11.1.2
//     Strategy:    Classic
//     IndexOnly:   False
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using Crestron.SimplSharp;
using Crestron.SimplSharpPro;
using Crestron.SimplSharpPro.DeviceSupport;
using MicrosoftTeamsDemo;

namespace MicrosoftTeamsDemo.popUpMics
{

    /// <summary>
    /// Allow events by list item and states (feedbacks) to be set by item index.
    /// </summary>
    public partial interface IMicsListByItem
    {

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<ItemEventArgs> micItemLvl_LowerTouchEvent;

        /// <summary>
        /// MicsList.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="listItemIndex">The index of the listItem (1 based).</param>
        /// <param name="callback">The delegate to set the feedback.</param>
        void List_Item_Visible(ushort listItemIndex, MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// Helper MicsList.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="listItemIndex">The index of the listItem (1 based).</param>
        /// <param name="digital">The <see="bool"/> value to set on the panel.</param>
        void List_Item_Visible(ushort listItemIndex, bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void micItemVol1Up_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="digital">The bool value to send to the panel.</param>
        void micItemVol1Up_Selected(ushort itemIndex, bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void micItemVol2Down_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="digital">The bool value to send to the panel.</param>
        void micItemVol2Down_Selected(ushort itemIndex, bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void micItemVol3Mute_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="digital">The bool value to send to the panel.</param>
        void micItemVol3Mute_Selected(ushort itemIndex, bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The ushort analog delegate to update the panel.</param>
        void micItemLvl_LowerTouchfb(ushort itemIndex, MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// {joinInfo.Notes} Feedback
        /// </summary>
        /// <param name=""itemIndex"">Index of the Widget List (0 based).</param>
        /// <param name=""analog"">The ushort analog value to send to the panel.</param>
        void micItemLvl_LowerTouchfb(ushort itemIndex, ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="analog">The short analog value to send to the panel.</param>
        void micItemLvl_LowerTouchfb(ushort itemIndex, short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void micItemLabel_Indirect(ushort itemIndex, MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="itemIndex">Index of the Widget List (0 based).</param>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void micItemLabel_Indirect(ushort itemIndex, string serial);
    }


    /// <summary>
    /// Search List
    /// </summary>
    internal partial class MicsList
    {
        #region CH5 Contract
        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> micItemVol1Up_PressEvent;
        private void onmicItemVol1Up_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.ItemIndex));
        }

        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> micItemVol2Down_PressEvent;
        private void onmicItemVol2Down_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.ItemIndex));
        }

        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> micItemVol3Mute_PressEvent;
        private void onmicItemVol3Mute_Press(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.ItemIndex));
        }

        /// <inheritdoc/>
        public event EventHandler<ItemEventArgs> micItemLvl_LowerTouchEvent;
        private void onmicItemLvl_LowerTouch(IndexedEventArgs eventArgs)
        {
            EventHandler<ItemEventArgs> handler = micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, new ItemEventArgs((SmartObjectEventArgs)eventArgs.SigArgs, eventArgs.ItemIndex));
        }

        /// <inheritdoc/>
        public void micItemVol1Up_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol1Up_SelectedState + (uint) itemIndex], this);
            }
        }

        /// <inheritdoc/>
        public void micItemVol1Up_Selected(ushort itemIndex, bool digital)
        {
            micItemVol1Up_Selected(itemIndex, (sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void micItemVol2Down_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol2Down_SelectedState + (uint) itemIndex], this);
            }
        }

        /// <inheritdoc/>
        public void micItemVol2Down_Selected(ushort itemIndex, bool digital)
        {
            micItemVol2Down_Selected(itemIndex, (sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void micItemVol3Mute_Selected(ushort itemIndex, MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol3Mute_SelectedState + (uint) itemIndex], this);
            }
        }

        /// <inheritdoc/>
        public void micItemVol3Mute_Selected(ushort itemIndex, bool digital)
        {
            micItemVol3Mute_Selected(itemIndex, (sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void List_Item_Visible(ushort listItemIndex, MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item1_VisibleState + (uint) listItemIndex], this);
            }
        }

        /// <inheritdoc/>
        public void List_Item_Visible(ushort listItemIndex, bool digital)
        {
            List_Item_Visible(listItemIndex, (sig, component) => sig.BoolValue = digital);
        }

        /// <inheritdoc/>
        public void micItemLvl_LowerTouchfb(ushort itemIndex, MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_0__micItemLvl_LowerTouchfbState + (uint)itemIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void micItemLvl_LowerTouchfb(ushort itemIndex, ushort analog)
        {
            micItemLvl_LowerTouchfb(itemIndex, (sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void micItemLvl_LowerTouchfb(ushort itemIndex, short analog)
        {
            micItemLvl_LowerTouchfb(itemIndex, (sig, component) => sig.ShortValue = analog);
        }

        /// <inheritdoc/>
        public void micItemLabel_Indirect(ushort itemIndex, MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_0__micItemLabel_IndirectState + (uint) itemIndex * 1], this);
            }
        }

        /// <inheritdoc/>
        public void micItemLabel_Indirect(ushort itemIndex, string serial)
        {
            micItemLabel_Indirect(itemIndex, (sig, component) => sig.StringValue = serial);
        }

        #endregion
    }

    /// <summary>
    /// MicsList
    /// </summary>
    public partial interface IMicsList : IMicsListByItem
    {
        object UserObject { get; set; }

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[1].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[1].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[1].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[2].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[2].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[2].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[3].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[3].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[3].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[4].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[4].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[4].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[5].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[5].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[5].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[6].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_6__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[6].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_6__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[6].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_6__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[7].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_7__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[7].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_7__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[7].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_7__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[8].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_8__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[8].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_8__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[8].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_8__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[9].micItemVol1Up.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_9__micItemVol1Up_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[9].micItemVol2Down.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_9__micItemVol2Down_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[9].micItemVol3Mute.Press (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_9__micItemVol3Mute_PressEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[0].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_0__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[1].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_1__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[2].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_2__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[3].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_3__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[4].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_4__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[5].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_5__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[6].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_6__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[7].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_7__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[8].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_8__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// Event popUpMics.MicsList.Items[9].micItemLvl.Lower Touch (from panel to Control System)
        /// </summary>
        event EventHandler<UIEventArgs> Items_9__micItemLvl_LowerTouchEvent;

        /// <summary>
        /// MicsList.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item1_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item1_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item1_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item2_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item2_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item2_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item2_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item3_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item3_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item3_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item3_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item4_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item4_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item4_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item4_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item5_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item5_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item5_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item5_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item6_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item6_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item6_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item6_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item7_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item7_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item7_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item7_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item8_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item8_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item8_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item8_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item9_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item9_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item9_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item9_Visible(bool digital);

        /// <summary>
        /// MicsList.List_Item10_Visible Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void MicsList_List_Item10_Visible(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// MicsList.List_Item10_Visible Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void MicsList_List_Item10_Visible(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_0__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_0__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_0__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_0__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_0__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_0__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_1__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_1__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_1__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_1__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_1__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_1__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_2__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_2__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_2__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_2__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_2__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_2__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_3__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_3__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_3__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_3__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_3__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_3__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_4__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_4__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_4__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_4__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_4__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_4__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_5__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_5__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_5__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_5__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_5__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_5__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_6__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_6__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_6__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_6__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_6__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_6__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_7__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_7__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_7__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_7__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_7__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_7__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_8__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_8__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_8__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_8__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_8__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_8__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_9__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol1Up.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_9__micItemVol1Up_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_9__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol2Down.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_9__micItemVol2Down_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="callback">The bool delegate to update the panel.</param>
        void Items_9__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemVol3Mute.Selected Feedback
        /// </summary>
        /// <param name="digital">The bool to update the panel.</param>
        void Items_9__micItemVol3Mute_Selected(bool digital);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_0__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_0__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_0__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_1__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_1__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_1__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_2__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_2__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_2__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_3__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_3__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_3__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_4__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_4__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_4__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_5__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_5__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_5__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_6__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_6__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_6__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_7__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_7__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_7__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_8__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_8__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_8__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort delegate to update the panel.</param>
        void Items_9__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The ushort analog to update the panel.</param>
        void Items_9__micItemLvl_LowerTouchfb(ushort analog);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemLvl.Lower Touch fb Feedback
        /// </summary>
        /// <param name="callback">The short analog to update the panel.</param>
        void Items_9__micItemLvl_LowerTouchfb(short analog);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_0__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[0].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_0__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_1__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[1].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_1__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_2__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[2].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_2__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_3__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[3].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_3__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_4__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[4].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_4__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_5__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[5].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_5__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_6__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[6].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_6__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_7__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[7].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_7__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_8__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[8].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_8__micItemLabel_Indirect(string serial);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="callback">The <see cref="string"/> delegate to update the panel.</param>
        void Items_9__micItemLabel_Indirect(MicsListStringInputSigDelegate callback);

        /// <summary>
        /// popUpMics.MicsList.Items[9].micItemLabel.Indirect Feedback
        /// </summary>
        /// <param name="serial">The <see cref="string"/> to update the panel.</param>
        void Items_9__micItemLabel_Indirect(string serial);
    }

    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="boolInputSig">The <see cref="BoolInputSig"/> joinInfo data.</param>
    /// <param name="micslist">The <see cref="IMicsList"/> on which to apply the feedback.</param>
    public delegate void MicsListBoolInputSigDelegate(BoolInputSig boolInputSig, IMicsList micslist);
    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="uShortInputSig">The <see cref="UShortInputSig"/> joinInfo data.</param>
    /// <param name="micslist">The <see cref="IMicsList"/> on which to apply the feedback.</param>
    public delegate void MicsListUShortInputSigDelegate(UShortInputSig uShortInputSig, IMicsList micslist);
    /// <summary>
    /// Digital callback used in feedback events.
    /// </summary>
    /// <param name="stringInputSig">The <see cref="StringInputSig"/> joinInfo data.</param>
    /// <param name="micslist">The <see cref="IMicsList"/> on which to apply the feedback.</param>
    public delegate void MicsListStringInputSigDelegate(StringInputSig stringInputSig, IMicsList micslist);

    /// <summary>
    /// MicsList
    /// </summary>
    internal partial class MicsList : IMicsList, IDisposable
    {
        #region Standard CH5 Component members

        private ComponentMediator ComponentMediator { get; set; }

        public object UserObject { get; set; }

        /// <summary>
        /// Gets the ControlJoinId a.k.a. SmartObjectId.  This Id identifies the extender symbol.
        /// </summary>
        public uint ControlJoinId { get; private set; }

        private IList<BasicTriListWithSmartObject> _devices;

        /// <summary>
        /// Gets the list of devices.
        /// </summary>
        public IList<BasicTriListWithSmartObject> Devices { get { return _devices; } }

        #endregion
        /// <summary>
        /// Number of Items.
        /// </summary>
        public uint ItemCount { get; private set; }

        #region Joins

        private static class Joins
        {
            /// <summary>
            /// Digital signals,
            /// </summary>
            internal static class Booleans
            {
                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[0].micItemVol1Up.Press
                /// </summary>
                public const uint Items_0__micItemVol1Up_PressEvent = 1201;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[0].micItemVol2Down.Press
                /// </summary>
                public const uint Items_0__micItemVol2Down_PressEvent = 1202;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[0].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_0__micItemVol3Mute_PressEvent = 1203;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[1].micItemVol1Up.Press
                /// </summary>
                public const uint Items_1__micItemVol1Up_PressEvent = 1204;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[1].micItemVol2Down.Press
                /// </summary>
                public const uint Items_1__micItemVol2Down_PressEvent = 1205;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[1].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_1__micItemVol3Mute_PressEvent = 1206;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[2].micItemVol1Up.Press
                /// </summary>
                public const uint Items_2__micItemVol1Up_PressEvent = 1207;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[2].micItemVol2Down.Press
                /// </summary>
                public const uint Items_2__micItemVol2Down_PressEvent = 1208;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[2].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_2__micItemVol3Mute_PressEvent = 1209;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[3].micItemVol1Up.Press
                /// </summary>
                public const uint Items_3__micItemVol1Up_PressEvent = 1210;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[3].micItemVol2Down.Press
                /// </summary>
                public const uint Items_3__micItemVol2Down_PressEvent = 1211;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[3].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_3__micItemVol3Mute_PressEvent = 1212;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[4].micItemVol1Up.Press
                /// </summary>
                public const uint Items_4__micItemVol1Up_PressEvent = 1213;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[4].micItemVol2Down.Press
                /// </summary>
                public const uint Items_4__micItemVol2Down_PressEvent = 1214;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[4].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_4__micItemVol3Mute_PressEvent = 1215;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[5].micItemVol1Up.Press
                /// </summary>
                public const uint Items_5__micItemVol1Up_PressEvent = 1216;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[5].micItemVol2Down.Press
                /// </summary>
                public const uint Items_5__micItemVol2Down_PressEvent = 1217;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[5].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_5__micItemVol3Mute_PressEvent = 1218;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[6].micItemVol1Up.Press
                /// </summary>
                public const uint Items_6__micItemVol1Up_PressEvent = 1219;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[6].micItemVol2Down.Press
                /// </summary>
                public const uint Items_6__micItemVol2Down_PressEvent = 1220;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[6].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_6__micItemVol3Mute_PressEvent = 1221;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[7].micItemVol1Up.Press
                /// </summary>
                public const uint Items_7__micItemVol1Up_PressEvent = 1222;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[7].micItemVol2Down.Press
                /// </summary>
                public const uint Items_7__micItemVol2Down_PressEvent = 1223;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[7].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_7__micItemVol3Mute_PressEvent = 1224;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[8].micItemVol1Up.Press
                /// </summary>
                public const uint Items_8__micItemVol1Up_PressEvent = 1225;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[8].micItemVol2Down.Press
                /// </summary>
                public const uint Items_8__micItemVol2Down_PressEvent = 1226;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[8].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_8__micItemVol3Mute_PressEvent = 1227;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol1Up.Press
                /// popUpMics.MicsList.Items[9].micItemVol1Up.Press
                /// </summary>
                public const uint Items_9__micItemVol1Up_PressEvent = 1228;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol2Down.Press
                /// popUpMics.MicsList.Items[9].micItemVol2Down.Press
                /// </summary>
                public const uint Items_9__micItemVol2Down_PressEvent = 1229;

                /// <summary>
                /// Output or Event digital joinInfo from panel to Control System: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol3Mute.Press
                /// popUpMics.MicsList.Items[9].micItemVol3Mute.Press
                /// </summary>
                public const uint Items_9__micItemVol3Mute_PressEvent = 1230;


                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item1_Visible
                /// MicsList.List_Item1_Visible
                /// </summary>
                public const uint MicsList_List_Item1_VisibleState = 1;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item2_Visible
                /// MicsList.List_Item2_Visible
                /// </summary>
                public const uint MicsList_List_Item2_VisibleState = 2;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item3_Visible
                /// MicsList.List_Item3_Visible
                /// </summary>
                public const uint MicsList_List_Item3_VisibleState = 3;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item4_Visible
                /// MicsList.List_Item4_Visible
                /// </summary>
                public const uint MicsList_List_Item4_VisibleState = 4;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item5_Visible
                /// MicsList.List_Item5_Visible
                /// </summary>
                public const uint MicsList_List_Item5_VisibleState = 5;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item6_Visible
                /// MicsList.List_Item6_Visible
                /// </summary>
                public const uint MicsList_List_Item6_VisibleState = 6;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item7_Visible
                /// MicsList.List_Item7_Visible
                /// </summary>
                public const uint MicsList_List_Item7_VisibleState = 7;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item8_Visible
                /// MicsList.List_Item8_Visible
                /// </summary>
                public const uint MicsList_List_Item8_VisibleState = 8;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item9_Visible
                /// MicsList.List_Item9_Visible
                /// </summary>
                public const uint MicsList_List_Item9_VisibleState = 9;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.List_Item10_Visible
                /// MicsList.List_Item10_Visible
                /// </summary>
                public const uint MicsList_List_Item10_VisibleState = 10;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[0].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_0__micItemVol1Up_SelectedState = 611;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[0].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_0__micItemVol2Down_SelectedState = 612;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[0].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_0__micItemVol3Mute_SelectedState = 613;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[1].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_1__micItemVol1Up_SelectedState = 614;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[1].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_1__micItemVol2Down_SelectedState = 615;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[1].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_1__micItemVol3Mute_SelectedState = 616;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[2].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_2__micItemVol1Up_SelectedState = 617;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[2].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_2__micItemVol2Down_SelectedState = 618;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[2].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_2__micItemVol3Mute_SelectedState = 619;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[3].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_3__micItemVol1Up_SelectedState = 620;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[3].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_3__micItemVol2Down_SelectedState = 621;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[3].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_3__micItemVol3Mute_SelectedState = 622;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[4].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_4__micItemVol1Up_SelectedState = 623;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[4].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_4__micItemVol2Down_SelectedState = 624;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[4].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_4__micItemVol3Mute_SelectedState = 625;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[5].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_5__micItemVol1Up_SelectedState = 626;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[5].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_5__micItemVol2Down_SelectedState = 627;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[5].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_5__micItemVol3Mute_SelectedState = 628;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[6].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_6__micItemVol1Up_SelectedState = 629;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[6].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_6__micItemVol2Down_SelectedState = 630;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[6].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_6__micItemVol3Mute_SelectedState = 631;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[7].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_7__micItemVol1Up_SelectedState = 632;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[7].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_7__micItemVol2Down_SelectedState = 633;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[7].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_7__micItemVol3Mute_SelectedState = 634;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[8].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_8__micItemVol1Up_SelectedState = 635;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[8].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_8__micItemVol2Down_SelectedState = 636;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[8].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_8__micItemVol3Mute_SelectedState = 637;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol1Up.Selected
                /// popUpMics.MicsList.Items[9].micItemVol1Up.Selected
                /// </summary>
                public const uint Items_9__micItemVol1Up_SelectedState = 638;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol2Down.Selected
                /// popUpMics.MicsList.Items[9].micItemVol2Down.Selected
                /// </summary>
                public const uint Items_9__micItemVol2Down_SelectedState = 639;

                /// <summary>
                /// Input or Feedback digital joinInfo from Control System to panel: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemVol3Mute.Selected
                /// popUpMics.MicsList.Items[9].micItemVol3Mute.Selected
                /// </summary>
                public const uint Items_9__micItemVol3Mute_SelectedState = 640;

            }
            /// <summary>
            /// Analog signals.
            /// </summary>
            internal static class Numerics
            {
                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_0__micItemLvl_LowerTouchEvent = 1801;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[1].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_1__micItemLvl_LowerTouchEvent = 1802;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[2].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_2__micItemLvl_LowerTouchEvent = 1803;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[3].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_3__micItemLvl_LowerTouchEvent = 1804;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[4].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_4__micItemLvl_LowerTouchEvent = 1805;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[5].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_5__micItemLvl_LowerTouchEvent = 1806;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[6].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_6__micItemLvl_LowerTouchEvent = 1807;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[7].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_7__micItemLvl_LowerTouchEvent = 1808;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[8].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_8__micItemLvl_LowerTouchEvent = 1809;

                /// <summary>
                /// Output or Event analog joinInfo from panel to Control System: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemLvl.LowerTouch
                /// popUpMics.MicsList.Items[9].micItemLvl.Lower Touch
                /// </summary>
                public const uint Items_9__micItemLvl_LowerTouchEvent = 1810;


                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[0].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_0__micItemLvl_LowerTouchfbState = 1801;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[1].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_1__micItemLvl_LowerTouchfbState = 1802;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[2].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_2__micItemLvl_LowerTouchfbState = 1803;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[3].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_3__micItemLvl_LowerTouchfbState = 1804;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[4].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_4__micItemLvl_LowerTouchfbState = 1805;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[5].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_5__micItemLvl_LowerTouchfbState = 1806;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[6].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_6__micItemLvl_LowerTouchfbState = 1807;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[7].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_7__micItemLvl_LowerTouchfbState = 1808;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[8].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_8__micItemLvl_LowerTouchfbState = 1809;

                /// <summary>
                /// Input or Feedback analog joinInfo from Control System to panel: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemLvl.LowerTouchfb
                /// popUpMics.MicsList.Items[9].micItemLvl.Lower Touch fb
                /// </summary>
                public const uint Items_9__micItemLvl_LowerTouchfbState = 1810;

            }
            /// <summary>
            /// Serial signals.
            /// </summary>
            internal static class Strings
            {

                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[0].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[0].micItemLabel.Indirect
                /// </summary>
                public const uint Items_0__micItemLabel_IndirectState = 1;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[1].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[1].micItemLabel.Indirect
                /// </summary>
                public const uint Items_1__micItemLabel_IndirectState = 2;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[2].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[2].micItemLabel.Indirect
                /// </summary>
                public const uint Items_2__micItemLabel_IndirectState = 3;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[3].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[3].micItemLabel.Indirect
                /// </summary>
                public const uint Items_3__micItemLabel_IndirectState = 4;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[4].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[4].micItemLabel.Indirect
                /// </summary>
                public const uint Items_4__micItemLabel_IndirectState = 5;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[5].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[5].micItemLabel.Indirect
                /// </summary>
                public const uint Items_5__micItemLabel_IndirectState = 6;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[6].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[6].micItemLabel.Indirect
                /// </summary>
                public const uint Items_6__micItemLabel_IndirectState = 7;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[7].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[7].micItemLabel.Indirect
                /// </summary>
                public const uint Items_7__micItemLabel_IndirectState = 8;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[8].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[8].micItemLabel.Indirect
                /// </summary>
                public const uint Items_8__micItemLabel_IndirectState = 9;
                /// <summary>
                /// Input or Feedback serial joinInfo from Control System to panel: popUpMics.MicsList.Items[9].listItem_micLevelCONTRACT.micItemLabel.Indirect
                /// popUpMics.MicsList.Items[9].micItemLabel.Indirect
                /// </summary>
                public const uint Items_9__micItemLabel_IndirectState = 10;
            }
        }

        #endregion

        #region Construction and Initialization

        /// <summary>
        /// Initializes a new instance of the <see cref="MicsList"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        internal MicsList(ComponentMediator componentMediator, uint controlJoinId, uint? itemCount)
        {
            ComponentMediator = componentMediator;
            Initialize(controlJoinId, itemCount);
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="MicsList"/> component class.
        /// </summary>
        /// <param name="componentMediator">The <see cref="ComponentMediator"/> used to instantiate the component.</param>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        internal MicsList(ComponentMediator componentMediator, uint controlJoinId) : this(componentMediator, controlJoinId, null)
        {
        }

        /// <summary>
        /// Initializes a new instance with default itemCount.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        private void Initialize(uint controlJoinId)
        {
            Initialize(controlJoinId, null);
        }

        private Dictionary<string, Indexes> _indexLookup = new Dictionary<string, Indexes>();

        /// <summary>
        /// Initializes a new instance of the <see cref="MicsList"/> component class.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId at which to create the component.</param>
        /// <param name="itemCount">The number of items.</param>
        private void Initialize(uint controlJoinId, uint? itemCount)
        {
            ControlJoinId = controlJoinId; 
 
            _devices = new List<BasicTriListWithSmartObject>(); 
 
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_0__micItemVol1Up_PressEvent.ToString(), new Indexes(0, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_0__micItemVol2Down_PressEvent.ToString(), new Indexes(0, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_0__micItemVol3Mute_PressEvent.ToString(), new Indexes(0, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_1__micItemVol1Up_PressEvent.ToString(), new Indexes(1, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_1__micItemVol2Down_PressEvent.ToString(), new Indexes(1, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_1__micItemVol3Mute_PressEvent.ToString(), new Indexes(1, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_2__micItemVol1Up_PressEvent.ToString(), new Indexes(2, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_2__micItemVol2Down_PressEvent.ToString(), new Indexes(2, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_2__micItemVol3Mute_PressEvent.ToString(), new Indexes(2, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_3__micItemVol1Up_PressEvent.ToString(), new Indexes(3, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_3__micItemVol2Down_PressEvent.ToString(), new Indexes(3, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_3__micItemVol3Mute_PressEvent.ToString(), new Indexes(3, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_4__micItemVol1Up_PressEvent.ToString(), new Indexes(4, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_4__micItemVol2Down_PressEvent.ToString(), new Indexes(4, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_4__micItemVol3Mute_PressEvent.ToString(), new Indexes(4, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_5__micItemVol1Up_PressEvent.ToString(), new Indexes(5, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_5__micItemVol2Down_PressEvent.ToString(), new Indexes(5, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_5__micItemVol3Mute_PressEvent.ToString(), new Indexes(5, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_6__micItemVol1Up_PressEvent.ToString(), new Indexes(6, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_6__micItemVol2Down_PressEvent.ToString(), new Indexes(6, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_6__micItemVol3Mute_PressEvent.ToString(), new Indexes(6, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_7__micItemVol1Up_PressEvent.ToString(), new Indexes(7, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_7__micItemVol2Down_PressEvent.ToString(), new Indexes(7, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_7__micItemVol3Mute_PressEvent.ToString(), new Indexes(7, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_8__micItemVol1Up_PressEvent.ToString(), new Indexes(8, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_8__micItemVol2Down_PressEvent.ToString(), new Indexes(8, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_8__micItemVol3Mute_PressEvent.ToString(), new Indexes(8, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_9__micItemVol1Up_PressEvent.ToString(), new Indexes(9, (ushort)Joins.Booleans.Items_0__micItemVol1Up_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_9__micItemVol2Down_PressEvent.ToString(), new Indexes(9, (ushort)Joins.Booleans.Items_0__micItemVol2Down_PressEvent, false));
            _indexLookup.Add(eSigType.Bool.ToString() + Joins.Booleans.Items_9__micItemVol3Mute_PressEvent.ToString(), new Indexes(9, (ushort)Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent.ToString(), new Indexes(0, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_1__micItemLvl_LowerTouchEvent.ToString(), new Indexes(1, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_2__micItemLvl_LowerTouchEvent.ToString(), new Indexes(2, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_3__micItemLvl_LowerTouchEvent.ToString(), new Indexes(3, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_4__micItemLvl_LowerTouchEvent.ToString(), new Indexes(4, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_5__micItemLvl_LowerTouchEvent.ToString(), new Indexes(5, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_6__micItemLvl_LowerTouchEvent.ToString(), new Indexes(6, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_7__micItemLvl_LowerTouchEvent.ToString(), new Indexes(7, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_8__micItemLvl_LowerTouchEvent.ToString(), new Indexes(8, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));
            _indexLookup.Add(eSigType.UShort.ToString() + Joins.Numerics.Items_9__micItemLvl_LowerTouchEvent.ToString(), new Indexes(9, (ushort)Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, false));

            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol1Up_PressEvent, GetIndexes, onmicItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol1Up_PressEvent, onItems_0__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol2Down_PressEvent, GetIndexes, onmicItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol2Down_PressEvent, onItems_0__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanItemEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, GetIndexes, onmicItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_0__micItemVol3Mute_PressEvent, onItems_0__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_1__micItemVol1Up_PressEvent, onItems_1__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_1__micItemVol2Down_PressEvent, onItems_1__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_1__micItemVol3Mute_PressEvent, onItems_1__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_2__micItemVol1Up_PressEvent, onItems_2__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_2__micItemVol2Down_PressEvent, onItems_2__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_2__micItemVol3Mute_PressEvent, onItems_2__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_3__micItemVol1Up_PressEvent, onItems_3__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_3__micItemVol2Down_PressEvent, onItems_3__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_3__micItemVol3Mute_PressEvent, onItems_3__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_4__micItemVol1Up_PressEvent, onItems_4__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_4__micItemVol2Down_PressEvent, onItems_4__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_4__micItemVol3Mute_PressEvent, onItems_4__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_5__micItemVol1Up_PressEvent, onItems_5__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_5__micItemVol2Down_PressEvent, onItems_5__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_5__micItemVol3Mute_PressEvent, onItems_5__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_6__micItemVol1Up_PressEvent, onItems_6__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_6__micItemVol2Down_PressEvent, onItems_6__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_6__micItemVol3Mute_PressEvent, onItems_6__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_7__micItemVol1Up_PressEvent, onItems_7__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_7__micItemVol2Down_PressEvent, onItems_7__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_7__micItemVol3Mute_PressEvent, onItems_7__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_8__micItemVol1Up_PressEvent, onItems_8__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_8__micItemVol2Down_PressEvent, onItems_8__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_8__micItemVol3Mute_PressEvent, onItems_8__micItemVol3Mute_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_9__micItemVol1Up_PressEvent, onItems_9__micItemVol1Up_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_9__micItemVol2Down_PressEvent, onItems_9__micItemVol2Down_Press);
            ComponentMediator.ConfigureBooleanEvent(controlJoinId, Joins.Booleans.Items_9__micItemVol3Mute_PressEvent, onItems_9__micItemVol3Mute_Press);
            ComponentMediator.ConfigureNumericItemEvent(controlJoinId, Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, GetIndexes, onmicItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_0__micItemLvl_LowerTouchEvent, onItems_0__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_1__micItemLvl_LowerTouchEvent, onItems_1__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_2__micItemLvl_LowerTouchEvent, onItems_2__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_3__micItemLvl_LowerTouchEvent, onItems_3__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_4__micItemLvl_LowerTouchEvent, onItems_4__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_5__micItemLvl_LowerTouchEvent, onItems_5__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_6__micItemLvl_LowerTouchEvent, onItems_6__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_7__micItemLvl_LowerTouchEvent, onItems_7__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_8__micItemLvl_LowerTouchEvent, onItems_8__micItemLvl_LowerTouch);
            ComponentMediator.ConfigureNumericEvent(controlJoinId, Joins.Numerics.Items_9__micItemLvl_LowerTouchEvent, onItems_9__micItemLvl_LowerTouch);
        }

        /// <summary>
        /// Get the offset when using indexed complex components.
        /// </summary>
        /// <param name="controlJoinId">The SmartObjectId of the component.</param>
        /// <param name="join">The join offset.</param>
        /// <param name="eSigType">The join data type.</param>
        private Indexes GetIndexes(uint controlJoinId, uint join, eSigType eSigType)
        {
            Indexes indexes;
            if (_indexLookup.TryGetValue(eSigType.ToString() + join.ToString(), out indexes))
            {
                return new Indexes(indexes.ItemIndex, (ushort) (join - indexes.JoinIndex), false);
            }

            return new Indexes(0, 0, true);
        }

        public void AddDevice(BasicTriListWithSmartObject device)
        {
            Devices.Add(device);
            ComponentMediator.HookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        public void RemoveDevice(BasicTriListWithSmartObject device)
        {
            Devices.Remove(device);
            ComponentMediator.UnHookSmartObjectEvents(device.SmartObjects[ControlJoinId]);
        }

        #endregion

        #region CH5 Contract

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__micItemVol1Up_PressEvent;
        private void onItems_0__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__micItemVol2Down_PressEvent;
        private void onItems_0__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__micItemVol3Mute_PressEvent;
        private void onItems_0__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__micItemVol1Up_PressEvent;
        private void onItems_1__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__micItemVol2Down_PressEvent;
        private void onItems_1__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__micItemVol3Mute_PressEvent;
        private void onItems_1__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__micItemVol1Up_PressEvent;
        private void onItems_2__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__micItemVol2Down_PressEvent;
        private void onItems_2__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__micItemVol3Mute_PressEvent;
        private void onItems_2__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__micItemVol1Up_PressEvent;
        private void onItems_3__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__micItemVol2Down_PressEvent;
        private void onItems_3__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__micItemVol3Mute_PressEvent;
        private void onItems_3__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__micItemVol1Up_PressEvent;
        private void onItems_4__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__micItemVol2Down_PressEvent;
        private void onItems_4__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__micItemVol3Mute_PressEvent;
        private void onItems_4__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__micItemVol1Up_PressEvent;
        private void onItems_5__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__micItemVol2Down_PressEvent;
        private void onItems_5__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__micItemVol3Mute_PressEvent;
        private void onItems_5__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_6__micItemVol1Up_PressEvent;
        private void onItems_6__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_6__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_6__micItemVol2Down_PressEvent;
        private void onItems_6__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_6__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_6__micItemVol3Mute_PressEvent;
        private void onItems_6__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_6__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_7__micItemVol1Up_PressEvent;
        private void onItems_7__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_7__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_7__micItemVol2Down_PressEvent;
        private void onItems_7__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_7__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_7__micItemVol3Mute_PressEvent;
        private void onItems_7__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_7__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_8__micItemVol1Up_PressEvent;
        private void onItems_8__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_8__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_8__micItemVol2Down_PressEvent;
        private void onItems_8__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_8__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_8__micItemVol3Mute_PressEvent;
        private void onItems_8__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_8__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_9__micItemVol1Up_PressEvent;
        private void onItems_9__micItemVol1Up_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_9__micItemVol1Up_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_9__micItemVol2Down_PressEvent;
        private void onItems_9__micItemVol2Down_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_9__micItemVol2Down_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_9__micItemVol3Mute_PressEvent;
        private void onItems_9__micItemVol3Mute_Press(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_9__micItemVol3Mute_PressEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_0__micItemLvl_LowerTouchEvent;
        private void onItems_0__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_0__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_1__micItemLvl_LowerTouchEvent;
        private void onItems_1__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_1__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_2__micItemLvl_LowerTouchEvent;
        private void onItems_2__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_2__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_3__micItemLvl_LowerTouchEvent;
        private void onItems_3__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_3__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_4__micItemLvl_LowerTouchEvent;
        private void onItems_4__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_4__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_5__micItemLvl_LowerTouchEvent;
        private void onItems_5__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_5__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_6__micItemLvl_LowerTouchEvent;
        private void onItems_6__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_6__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_7__micItemLvl_LowerTouchEvent;
        private void onItems_7__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_7__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_8__micItemLvl_LowerTouchEvent;
        private void onItems_8__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_8__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public event EventHandler<UIEventArgs> Items_9__micItemLvl_LowerTouchEvent;
        private void onItems_9__micItemLvl_LowerTouch(SmartObjectEventArgs eventArgs)
        {
            EventHandler<UIEventArgs> handler = Items_9__micItemLvl_LowerTouchEvent;
            if (handler != null)
                handler(this, UIEventArgs.CreateEventArgs(eventArgs));
        }

        /// <inheritdoc/>
        public void Items_0__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__micItemVol1Up_Selected(bool digital)
        {
            Items_0__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_1__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_1__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__micItemVol1Up_Selected(bool digital)
        {
            Items_1__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_2__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_2__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__micItemVol1Up_Selected(bool digital)
        {
            Items_2__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_3__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_3__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__micItemVol1Up_Selected(bool digital)
        {
            Items_3__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_4__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_4__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__micItemVol1Up_Selected(bool digital)
        {
            Items_4__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_5__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_5__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__micItemVol1Up_Selected(bool digital)
        {
            Items_5__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_6__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_6__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_6__micItemVol1Up_Selected(bool digital)
        {
            Items_6__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_7__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_7__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_7__micItemVol1Up_Selected(bool digital)
        {
            Items_7__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_8__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_8__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_8__micItemVol1Up_Selected(bool digital)
        {
            Items_8__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_9__micItemVol1Up_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_9__micItemVol1Up_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_9__micItemVol1Up_Selected(bool digital)
        {
            Items_9__micItemVol1Up_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_0__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__micItemVol2Down_Selected(bool digital)
        {
            Items_0__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_1__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_1__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__micItemVol2Down_Selected(bool digital)
        {
            Items_1__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_2__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_2__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__micItemVol2Down_Selected(bool digital)
        {
            Items_2__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_3__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_3__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__micItemVol2Down_Selected(bool digital)
        {
            Items_3__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_4__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_4__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__micItemVol2Down_Selected(bool digital)
        {
            Items_4__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_5__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_5__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__micItemVol2Down_Selected(bool digital)
        {
            Items_5__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_6__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_6__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_6__micItemVol2Down_Selected(bool digital)
        {
            Items_6__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_7__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_7__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_7__micItemVol2Down_Selected(bool digital)
        {
            Items_7__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_8__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_8__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_8__micItemVol2Down_Selected(bool digital)
        {
            Items_8__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_9__micItemVol2Down_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_9__micItemVol2Down_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_9__micItemVol2Down_Selected(bool digital)
        {
            Items_9__micItemVol2Down_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_0__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_0__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__micItemVol3Mute_Selected(bool digital)
        {
            Items_0__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_1__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_1__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__micItemVol3Mute_Selected(bool digital)
        {
            Items_1__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_2__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_2__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__micItemVol3Mute_Selected(bool digital)
        {
            Items_2__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_3__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_3__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__micItemVol3Mute_Selected(bool digital)
        {
            Items_3__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_4__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_4__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__micItemVol3Mute_Selected(bool digital)
        {
            Items_4__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_5__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_5__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__micItemVol3Mute_Selected(bool digital)
        {
            Items_5__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_6__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_6__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_6__micItemVol3Mute_Selected(bool digital)
        {
            Items_6__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_7__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_7__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_7__micItemVol3Mute_Selected(bool digital)
        {
            Items_7__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_8__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_8__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_8__micItemVol3Mute_Selected(bool digital)
        {
            Items_8__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void Items_9__micItemVol3Mute_Selected(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.Items_9__micItemVol3Mute_SelectedState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_9__micItemVol3Mute_Selected(bool digital)
        {
            Items_9__micItemVol3Mute_Selected((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item1_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item1_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item1_Visible(bool digital)
        {
            MicsList_List_Item1_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item10_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item10_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item10_Visible(bool digital)
        {
            MicsList_List_Item10_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item2_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item2_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item2_Visible(bool digital)
        {
            MicsList_List_Item2_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item3_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item3_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item3_Visible(bool digital)
        {
            MicsList_List_Item3_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item4_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item4_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item4_Visible(bool digital)
        {
            MicsList_List_Item4_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item5_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item5_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item5_Visible(bool digital)
        {
            MicsList_List_Item5_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item6_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item6_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item6_Visible(bool digital)
        {
            MicsList_List_Item6_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item7_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item7_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item7_Visible(bool digital)
        {
            MicsList_List_Item7_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item8_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item8_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item8_Visible(bool digital)
        {
            MicsList_List_Item8_Visible((sig, component) => sig.BoolValue = digital);
        }
        /// <inheritdoc/>
        public void MicsList_List_Item9_Visible(MicsListBoolInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].BooleanInput[Joins.Booleans.MicsList_List_Item9_VisibleState], this);
            }
        }

        /// <inheritdoc/>
        public void MicsList_List_Item9_Visible(bool digital)
        {
            MicsList_List_Item9_Visible((sig, component) => sig.BoolValue = digital);
        }

        /// <inheritdoc/>
        public void Items_0__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_0__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_0__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_0__micItemLvl_LowerTouchfb(short analog)
        {
            Items_0__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_1__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_1__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_1__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_1__micItemLvl_LowerTouchfb(short analog)
        {
            Items_1__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_2__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_2__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_2__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_2__micItemLvl_LowerTouchfb(short analog)
        {
            Items_2__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_3__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_3__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_3__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_3__micItemLvl_LowerTouchfb(short analog)
        {
            Items_3__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_4__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_4__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_4__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_4__micItemLvl_LowerTouchfb(short analog)
        {
            Items_4__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_5__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_5__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_5__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_5__micItemLvl_LowerTouchfb(short analog)
        {
            Items_5__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_6__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_6__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_6__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_6__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_6__micItemLvl_LowerTouchfb(short analog)
        {
            Items_6__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_7__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_7__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_7__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_7__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_7__micItemLvl_LowerTouchfb(short analog)
        {
            Items_7__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_8__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_8__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_8__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_8__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_8__micItemLvl_LowerTouchfb(short analog)
        {
            Items_8__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }
        /// <inheritdoc/>
        public void Items_9__micItemLvl_LowerTouchfb(MicsListUShortInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].UShortInput[Joins.Numerics.Items_9__micItemLvl_LowerTouchfbState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_9__micItemLvl_LowerTouchfb(ushort analog)
        {
            Items_9__micItemLvl_LowerTouchfb((sig, component) => sig.UShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_9__micItemLvl_LowerTouchfb(short analog)
        {
            Items_9__micItemLvl_LowerTouchfb((sig, component) => sig.ShortValue = analog);
        }

        /// <inheritdoc/>
        public void Items_0__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_0__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_0__micItemLabel_Indirect(string serial)
        {
            Items_0__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_1__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_1__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_1__micItemLabel_Indirect(string serial)
        {
            Items_1__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_2__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_2__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_2__micItemLabel_Indirect(string serial)
        {
            Items_2__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_3__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_3__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_3__micItemLabel_Indirect(string serial)
        {
            Items_3__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_4__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_4__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_4__micItemLabel_Indirect(string serial)
        {
            Items_4__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_5__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_5__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_5__micItemLabel_Indirect(string serial)
        {
            Items_5__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_6__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_6__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_6__micItemLabel_Indirect(string serial)
        {
            Items_6__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_7__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_7__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_7__micItemLabel_Indirect(string serial)
        {
            Items_7__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_8__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_8__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_8__micItemLabel_Indirect(string serial)
        {
            Items_8__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }
        /// <inheritdoc/>
        public void Items_9__micItemLabel_Indirect(MicsListStringInputSigDelegate callback)
        {
            for (int index = 0; index < Devices.Count; index++)
            {
                callback(Devices[index].SmartObjects[ControlJoinId].StringInput[Joins.Strings.Items_9__micItemLabel_IndirectState], this);
            }
        }

        /// <inheritdoc/>
        public void Items_9__micItemLabel_Indirect(string serial)
        {
            Items_9__micItemLabel_Indirect((sig, component) => sig.StringValue = serial);
        }

        #endregion

        #region Overrides

        public override int GetHashCode()
        {
            return (int)ControlJoinId;
        }

        public override string ToString()
        {
            return string.Format("Contract: {0} Component: {1} HashCode: {2} {3}", "MicsList", GetType().Name, GetHashCode(), UserObject != null ? "UserObject: " + UserObject : null);
        }

        #endregion

        #region IDisposable

        public bool IsDisposed { get; set; }

        public void Dispose()
        {
            if (IsDisposed)
                return;

            IsDisposed = true;

            micItemVol1Up_PressEvent = null;
            Items_0__micItemVol1Up_PressEvent = null;
            micItemVol2Down_PressEvent = null;
            Items_0__micItemVol2Down_PressEvent = null;
            micItemVol3Mute_PressEvent = null;
            Items_0__micItemVol3Mute_PressEvent = null;
            Items_1__micItemVol1Up_PressEvent = null;
            Items_1__micItemVol2Down_PressEvent = null;
            Items_1__micItemVol3Mute_PressEvent = null;
            Items_2__micItemVol1Up_PressEvent = null;
            Items_2__micItemVol2Down_PressEvent = null;
            Items_2__micItemVol3Mute_PressEvent = null;
            Items_3__micItemVol1Up_PressEvent = null;
            Items_3__micItemVol2Down_PressEvent = null;
            Items_3__micItemVol3Mute_PressEvent = null;
            Items_4__micItemVol1Up_PressEvent = null;
            Items_4__micItemVol2Down_PressEvent = null;
            Items_4__micItemVol3Mute_PressEvent = null;
            Items_5__micItemVol1Up_PressEvent = null;
            Items_5__micItemVol2Down_PressEvent = null;
            Items_5__micItemVol3Mute_PressEvent = null;
            Items_6__micItemVol1Up_PressEvent = null;
            Items_6__micItemVol2Down_PressEvent = null;
            Items_6__micItemVol3Mute_PressEvent = null;
            Items_7__micItemVol1Up_PressEvent = null;
            Items_7__micItemVol2Down_PressEvent = null;
            Items_7__micItemVol3Mute_PressEvent = null;
            Items_8__micItemVol1Up_PressEvent = null;
            Items_8__micItemVol2Down_PressEvent = null;
            Items_8__micItemVol3Mute_PressEvent = null;
            Items_9__micItemVol1Up_PressEvent = null;
            Items_9__micItemVol2Down_PressEvent = null;
            Items_9__micItemVol3Mute_PressEvent = null;
            micItemLvl_LowerTouchEvent = null;
            Items_0__micItemLvl_LowerTouchEvent = null;
            Items_1__micItemLvl_LowerTouchEvent = null;
            Items_2__micItemLvl_LowerTouchEvent = null;
            Items_3__micItemLvl_LowerTouchEvent = null;
            Items_4__micItemLvl_LowerTouchEvent = null;
            Items_5__micItemLvl_LowerTouchEvent = null;
            Items_6__micItemLvl_LowerTouchEvent = null;
            Items_7__micItemLvl_LowerTouchEvent = null;
            Items_8__micItemLvl_LowerTouchEvent = null;
            Items_9__micItemLvl_LowerTouchEvent = null;
        }

        #endregion
    }
}
